{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2p7ww","title":"init(signals: Signals..., handler: ((Int32) -> ()))","type":"init"},{"path":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2t65u","title":"init(signals: [Signals], handler: ((Int32) -> ()))","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/signalhandler\/signalhandler\/handler","title":"let handler: ((Int32) -> ())","type":"property"},{"path":"\/documentation\/signalhandler\/signalhandler\/signals","title":"let signals: [Signals]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/signalhandler\/signalhandler\/start()","title":"func start() async","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/signalhandler\/signalhandler\/default","title":"static let `default`: SignalHandler","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)","title":"static func start(with: [Signals], completion: ((Int32) -> ())) async","type":"method"},{"path":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)","title":"static func start(with: Signals..., handler: ((Int32) -> ())) async","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/signalhandler\/signalhandler\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/signalhandler\/signalhandler\/==(_:_:)","title":"static func == (SignalHandler, SignalHandler) -> Bool","type":"op"}],"path":"\/documentation\/signalhandler\/signalhandler\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/signalhandler\/signalhandler","title":"SignalHandler","type":"class"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/signalhandler\/signals\/sigalrm","title":"case SIGALRM","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigbus","title":"case SIGBUS","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigchld","title":"case SIGCHLD","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigcont","title":"case SIGCONT","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigfpe","title":"case SIGFPE","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sighup","title":"case SIGHUP","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigill","title":"case SIGILL","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigint","title":"case SIGINT","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigio","title":"case SIGIO","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigiot","title":"case SIGIOT","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigpipe","title":"case SIGPIPE","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigprof","title":"case SIGPROF","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigpwr","title":"case SIGPWR","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigquit","title":"case SIGQUIT","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigsegv","title":"case SIGSEGV","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigstkflt","title":"case SIGSTKFLT","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigstksz","title":"case SIGSTKSZ","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigsys","title":"case SIGSYS","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigterm","title":"case SIGTERM","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigtrap","title":"case SIGTRAP","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigtstp","title":"case SIGTSTP","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigttin","title":"case SIGTTIN","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigttou","title":"case SIGTTOU","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigurg","title":"case SIGURG","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigusr1","title":"case SIGUSR1","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigusr2","title":"case SIGUSR2","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigvtalrm","title":"case SIGVTALRM","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigwinch","title":"case SIGWINCH","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigxcpu","title":"case SIGXCPU","type":"case"},{"path":"\/documentation\/signalhandler\/signals\/sigxfsz","title":"case SIGXFSZ","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/signalhandler\/signals\/init(rawvalue:)","title":"init?(rawValue: Int32)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/signalhandler\/signals\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/signalhandler\/signals\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/signalhandler\/signals\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/signalhandler\/signals\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/signalhandler\/signals\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/signalhandler\/signals","title":"Signals","type":"enum"}],"path":"\/documentation\/signalhandler","title":"SignalHandler","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}