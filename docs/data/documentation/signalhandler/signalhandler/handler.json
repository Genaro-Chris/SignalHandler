{"metadata":{"symbolKind":"property","role":"symbol","roleHeading":"Instance Property","title":"handler","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> ())"}],"externalID":"s:13SignalHandlerAAC7handleryys5Int32VXCvp","modules":[{"name":"SignalHandler"}]},"abstract":[{"type":"text","text":"Callback to run if any registered signal is caught"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> ())"}],"platforms":["Linux"]}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This callback canâ€™t be any function associated with a type such as instance or type methods, just a plain old closure","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Code example","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["   let callback: (Int32) -> () ","    callback = { value in","        print(\"This is a callback handler\")","    }"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"variants":[{"paths":["\/documentation\/signalhandler\/signalhandler\/handler"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"type":"topic","abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())"}],"title":"handler","kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/handler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"role":"symbol","navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"type":"topic","title":"SignalHandler","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SignalHandler"}],"url":"\/documentation\/signalhandler\/signalhandler"},"doc://SignalHandler/documentation/SignalHandler":{"abstract":[],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","url":"\/documentation\/signalhandler","kind":"symbol","title":"SignalHandler","type":"topic","role":"collection"}}}