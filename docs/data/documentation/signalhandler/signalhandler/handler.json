{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler"},"metadata":{"roleHeading":"Instance Property","externalID":"s:13SignalHandlerAAC7handleryys5Int32VXCvp","modules":[{"name":"SignalHandler"}],"symbolKind":"property","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> ())"}],"title":"handler"},"sections":[],"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"abstract":[{"type":"text","text":"Callback to run if any registered signal is caught"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())","kind":"text"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This callback canâ€™t be any function associated with a type such as instance or type methods, just a plain old closure"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Code example"}],"type":"paragraph"},{"syntax":"swift","code":["   let callback: (Int32) -> () ","    callback = { value in","        print(\"This is a callback handler\")","    }"],"type":"codeListing"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler\/handler"]}],"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"kind":"symbol","title":"SignalHandler","type":"topic","url":"\/documentation\/signalhandler\/signalhandler","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"url":"\/documentation\/signalhandler\/signalhandler\/handler","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Callback to run if any registered signal is caught"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())"}],"title":"handler","type":"topic"},"doc://SignalHandler/documentation/SignalHandler":{"abstract":[],"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","title":"SignalHandler","url":"\/documentation\/signalhandler"}}}