{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler"},"metadata":{"modules":[{"name":"SignalHandler"}],"symbolKind":"property","externalID":"s:13SignalHandlerAAC7handleryys5Int32VXCvp","role":"symbol","title":"handler","roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") -> ())","kind":"text"}]},"variants":[{"paths":["\/documentation\/signalhandler\/signalhandler\/handler"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"This callback canâ€™t be any function associated with a type such as instance or type methods, just a plain old closure"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Code example"}],"type":"paragraph"},{"code":["   let callback: (Int32) -> () ","    callback = { value in","        print(\"This is a callback handler\")","    }"],"syntax":"swift","type":"codeListing"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}],"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","type":"topic","kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/handler","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())","kind":"text"}],"title":"handler","abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}]},"doc://SignalHandler/documentation/SignalHandler":{"role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"topic","url":"\/documentation\/signalhandler","title":"SignalHandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"role":"symbol","abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"url":"\/documentation\/signalhandler\/signalhandler","title":"SignalHandler"}}}