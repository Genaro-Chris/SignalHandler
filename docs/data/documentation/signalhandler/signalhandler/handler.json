{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())","kind":"text"}],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This callback canâ€™t be any function associated with a type such as instance or type methods, just a plain old closure","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Code example","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["   let callback: (Int32) -> () ","    callback = { value in","        print(\"This is a callback handler\")","    }"]}],"kind":"content"}],"sections":[],"identifier":{"url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"SignalHandler"}],"roleHeading":"Instance Property","title":"handler","externalID":"s:13SignalHandlerAAC7handleryys5Int32VXCvp","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())","kind":"text"}],"role":"symbol","symbolKind":"property"},"abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler\/handler"]}],"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"title":"handler","abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}],"type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","kind":"symbol","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())","kind":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/handler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","url":"\/documentation\/signalhandler\/signalhandler","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"title":"SignalHandler","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"type":"topic","kind":"symbol","role":"symbol"},"doc://SignalHandler/documentation/SignalHandler":{"url":"\/documentation\/signalhandler","kind":"symbol","role":"collection","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","title":"SignalHandler","abstract":[],"type":"topic"}}}