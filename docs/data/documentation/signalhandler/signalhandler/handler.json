{"metadata":{"title":"handler","modules":[{"name":"SignalHandler"}],"externalID":"s:13SignalHandlerAAC7handleryys5Int32VXCvp","roleHeading":"Instance Property","symbolKind":"property","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())","kind":"text"}]},"kind":"symbol","abstract":[{"type":"text","text":"Callback to run if any registered signal is caught"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())","kind":"text"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This callback canâ€™t be any function associated with a type such as instance or type methods, just a plain old closure"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Code example"}]},{"type":"codeListing","syntax":"swift","code":["   let callback: (Int32) -> () ","    callback = { value in","        print(\"This is a callback handler\")","    }"]}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler\/handler"]}],"references":{"doc://SignalHandler/documentation/SignalHandler":{"type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","title":"SignalHandler","role":"collection","abstract":[],"kind":"symbol","url":"\/documentation\/signalhandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"type":"topic","abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignalHandler","kind":"identifier"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"role":"symbol","url":"\/documentation\/signalhandler\/signalhandler","kind":"symbol","title":"SignalHandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> ())"}],"url":"\/documentation\/signalhandler\/signalhandler\/handler","abstract":[{"type":"text","text":"Callback to run if any registered signal is caught"}],"type":"topic","kind":"symbol","role":"symbol","title":"handler"}}}