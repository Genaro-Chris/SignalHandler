{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> ())"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This callback canâ€™t be any function associated with a type such as instance or type methods, just a plain old closure","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Code example","type":"text"}],"type":"paragraph"},{"code":["   let callback: (Int32) -> () ","    callback = { value in","        print(\"This is a callback handler\")","    }"],"syntax":"swift","type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"sections":[],"variants":[{"paths":["\/documentation\/signalhandler\/signalhandler\/handler"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"type":"text","text":"Callback to run if any registered signal is caught"}],"metadata":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())"}],"role":"symbol","symbolKind":"property","modules":[{"name":"SignalHandler"}],"externalID":"s:13SignalHandlerAAC7handleryys5Int32VXCvp","roleHeading":"Instance Property","title":"handler"},"identifier":{"url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","interfaceLanguage":"swift"},"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"text":") -> ())","kind":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/handler","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}],"title":"handler","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler"},"doc://SignalHandler/documentation/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","abstract":[],"role":"collection","kind":"symbol","title":"SignalHandler","url":"\/documentation\/signalhandler","type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","url":"\/documentation\/signalhandler\/signalhandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignalHandler","kind":"identifier"}],"navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"title":"SignalHandler"}}}