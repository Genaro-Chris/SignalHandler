{"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"identifier":{"url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","interfaceLanguage":"swift"},"abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}],"variants":[{"paths":["\/documentation\/signalhandler\/signalhandler\/handler"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"modules":[{"name":"SignalHandler"}],"symbolKind":"property","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())","kind":"text"}],"roleHeading":"Instance Property","role":"symbol","title":"handler","externalID":"s:13SignalHandlerAAC7handleryys5Int32VXCvp"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"This callback canâ€™t be any function associated with a type such as instance or type methods, just a plain old closure","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Code example","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["   let callback: (Int32) -> () ","    callback = { value in","        print(\"This is a callback handler\")","    }"],"type":"codeListing"}]}],"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"title":"handler","abstract":[{"type":"text","text":"Callback to run if any registered signal is caught"}],"url":"\/documentation\/signalhandler\/signalhandler\/handler","kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())","kind":"text"}],"type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"type":"topic","navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignalHandler","kind":"identifier"}],"url":"\/documentation\/signalhandler\/signalhandler","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","kind":"symbol","title":"SignalHandler","role":"symbol","abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}]},"doc://SignalHandler/documentation/SignalHandler":{"kind":"symbol","url":"\/documentation\/signalhandler","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","abstract":[],"type":"topic","role":"collection","title":"SignalHandler"}}}