{"identifier":{"url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","interfaceLanguage":"swift"},"sections":[],"metadata":{"roleHeading":"Instance Property","symbolKind":"property","role":"symbol","title":"handler","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") -> ())","kind":"text"}],"modules":[{"name":"SignalHandler"}],"externalID":"s:13SignalHandlerAAC7handleryys5Int32VXCvp"},"kind":"symbol","abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}],"variants":[{"paths":["\/documentation\/signalhandler\/signalhandler\/handler"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") -> ())","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"This callback canâ€™t be any function associated with a type such as instance or type methods, just a plain old closure"}],"type":"paragraph"},{"inlineContent":[{"text":"Code example","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["   let callback: (Int32) -> () ","    callback = { value in","        print(\"This is a callback handler\")","    }"],"type":"codeListing"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://SignalHandler/documentation/SignalHandler":{"role":"collection","url":"\/documentation\/signalhandler","kind":"symbol","title":"SignalHandler","type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","abstract":[]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}],"fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") -> ())","kind":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/handler","title":"handler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"kind":"symbol","title":"SignalHandler","role":"symbol","type":"topic","url":"\/documentation\/signalhandler\/signalhandler","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"}}}