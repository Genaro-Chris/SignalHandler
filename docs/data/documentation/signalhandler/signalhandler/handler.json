{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> ())"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This callback canâ€™t be any function associated with a type such as instance or type methods, just a plain old closure"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Code example"}],"type":"paragraph"},{"type":"codeListing","code":["   let callback: (Int32) -> () ","    callback = { value in","        print(\"This is a callback handler\")","    }"],"syntax":"swift"}]}],"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/signalhandler\/signalhandler\/handler"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"metadata":{"externalID":"s:13SignalHandlerAAC7handleryys5Int32VXCvp","roleHeading":"Instance Property","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())","kind":"text"}],"modules":[{"name":"SignalHandler"}],"title":"handler","symbolKind":"property","role":"symbol"},"abstract":[{"type":"text","text":"Callback to run if any registered signal is caught"}],"sections":[],"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"type":"topic","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())","kind":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/handler","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","title":"handler","abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}],"role":"symbol"},"doc://SignalHandler/documentation/SignalHandler":{"abstract":[],"title":"SignalHandler","kind":"symbol","type":"topic","url":"\/documentation\/signalhandler","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","role":"collection"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"type":"topic","abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","title":"SignalHandler","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}]}}}