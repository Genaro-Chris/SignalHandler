{"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This callback canâ€™t be any function associated with a type such as instance or type methods, just a plain old closure","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Code example","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["   let callback: (Int32) -> () ","    callback = { value in","        print(\"This is a callback handler\")","    }"]}],"kind":"content"}],"kind":"symbol","variants":[{"paths":["\/documentation\/signalhandler\/signalhandler\/handler"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"handler","modules":[{"name":"SignalHandler"}],"role":"symbol","symbolKind":"property","externalID":"s:13SignalHandlerAAC7handleryys5Int32VXCvp","roleHeading":"Instance Property","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())","kind":"text"}]},"abstract":[{"type":"text","text":"Callback to run if any registered signal is caught"}],"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"kind":"symbol","type":"topic","title":"handler","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())","kind":"text"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","url":"\/documentation\/signalhandler\/signalhandler\/handler","abstract":[{"type":"text","text":"Callback to run if any registered signal is caught"}],"role":"symbol"},"doc://SignalHandler/documentation/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","role":"collection","title":"SignalHandler","kind":"symbol","type":"topic","abstract":[],"url":"\/documentation\/signalhandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"title":"SignalHandler","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","type":"topic","kind":"symbol","abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"url":"\/documentation\/signalhandler\/signalhandler"}}}