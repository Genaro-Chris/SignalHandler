{"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"role":"symbol","title":"start()","symbolKind":"method","externalID":"s:13SignalHandlerAAC5startyyYaF","roleHeading":"Instance Method","modules":[{"name":"SignalHandler"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler\/start()"]}],"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"sections":[],"kind":"symbol","abstract":[{"text":"Starts handling ","type":"text"},{"type":"reference","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","isActive":true},{"text":" registered asynchronously as they being caught","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This instance method must called if this type was instantiated otherwise "},{"type":"reference","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","isActive":true},{"type":"text","text":" or "},{"type":"reference","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","isActive":true},{"type":"text","text":" method can be called instead"}]}]}],"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Start handling signals"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"title":"start(with:handler:)","type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"kind":"symbol","title":"SignalHandler","type":"topic","url":"\/documentation\/signalhandler\/signalhandler","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:completion:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"text":": [","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"], ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"start(with:completion:)","type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","abstract":[{"text":"Start handling signals","type":"text"}],"role":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)","kind":"symbol"},"doc://SignalHandler/documentation/SignalHandler":{"abstract":[],"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","title":"SignalHandler","url":"\/documentation\/signalhandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"kind":"symbol","title":"start()","url":"\/documentation\/signalhandler\/signalhandler\/start()","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Starts handling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals"},{"type":"text","text":" registered asynchronously as they being caught"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"kind":"symbol","title":"signals","url":"\/documentation\/signalhandler\/signalhandler\/signals","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signals","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Signals registered to be handled"}]}}}