{"metadata":{"externalID":"s:13SignalHandlerAAC5start4with7handleryAA7SignalsOd_ys5Int32VXCtYaFZ","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","text":"Signals"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"title":"start(with:handler:)","symbolKind":"method","role":"symbol","modules":[{"name":"SignalHandler"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler\/start(with:handler:)"]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"signals"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"signals","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Variadic signals to register"}]}]},{"name":"handler","content":[{"inlineContent":[{"type":"text","text":"callback to execute when the signals are being caught"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Provides a quick way to start handle signals without the stress of instantiating the ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","isActive":true,"type":"reference"},{"text":" type and starting the handler by calling ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","isActive":true,"type":"reference"},{"text":" with just","type":"text"},{"text":" ","type":"text"},{"text":"one line or few lines of codes","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Code example of this method usage:"}]},{"code":["    async let signalHandler = SignalHandler.start(with: .SIGINT, .SIGQUIT, .SIGTSTP) { _ in","        \/\/ Code to clean up resources held","        print(\"Quitting\")","    }"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Or","type":"text"}]},{"code":["    Task {","        await SignalHandler.start(with: .SIGINT, .SIGQUIT) { _ in","            \/\/ Code to clean up resources held","            print(\"Closing socket\")        ","        }","    }"],"type":"codeListing","syntax":"swift"}]}],"abstract":[{"text":"Start handling signals","type":"text"}],"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"url":"\/documentation\/signalhandler\/signalhandler\/start()","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Starts handling ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","isActive":true,"type":"reference"},{"text":" registered asynchronously as they being caught","type":"text"}],"title":"start()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"type":"topic","abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","title":"SignalHandler","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}]},"doc://SignalHandler/documentation/SignalHandler/Signals":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Signals"}],"abstract":[{"type":"text","text":"*Nix signals"}],"title":"Signals","kind":"symbol","type":"topic","url":"\/documentation\/signalhandler\/signals","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","navigatorTitle":[{"kind":"identifier","text":"Signals"}],"role":"symbol"},"doc://SignalHandler/documentation/SignalHandler":{"abstract":[],"title":"SignalHandler","kind":"symbol","type":"topic","url":"\/documentation\/signalhandler","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","role":"collection"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"signals"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","url":"\/documentation\/signalhandler\/signalhandler\/signals","kind":"symbol","role":"symbol","type":"topic","title":"signals","abstract":[{"type":"text","text":"Signals registered to be handled"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)","kind":"symbol","role":"symbol","type":"topic","title":"start(with:handler:)","abstract":[{"type":"text","text":"Start handling signals"}]}}}