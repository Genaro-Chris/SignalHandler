{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"nonisolated","kind":"keyword"},{"text":" ","kind":"text"},{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"signals","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Signals","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"signals","content":[{"inlineContent":[{"type":"text","text":"Variadic signals to register"}],"type":"paragraph"}]},{"name":"handler","content":[{"inlineContent":[{"type":"text","text":"callback to execute when the signals are being caught"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides a quick way to start handle signals without the stress of instantiating the "},{"isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"reference"},{"type":"text","text":" type and starting the handler by calling "},{"isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","type":"reference"},{"type":"text","text":" with just"},{"type":"text","text":" "},{"type":"text","text":"one line or few lines of codes"}]},{"type":"paragraph","inlineContent":[{"text":"Code example of this method usage:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["    async let signalHandler = SignalHandler.start(with: .SIGINT, .SIGQUIT, .SIGTSTP) { _ in","        \/\/ Code to clean up resources held","        print(\"Quitting\")","    }"]},{"type":"paragraph","inlineContent":[{"text":"Or","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["    Task {","        await SignalHandler.start(with: .SIGINT, .SIGQUIT) { _ in","            \/\/ Code to clean up resources held","            print(\"Closing socket\")        ","        }","    }"]}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"text":"Start handling signals","type":"text"}],"metadata":{"modules":[{"name":"SignalHandler"}],"externalID":"s:13SignalHandlerAAC5start4with7handleryAA7SignalsOd_ys5Int32VXCtYaFZ","roleHeading":"Type Method","symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"start(with:handler:)","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler\/start(with:handler:)"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"references":{"doc://SignalHandler/documentation/SignalHandler/Signals":{"title":"Signals","kind":"symbol","role":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","navigatorTitle":[{"text":"Signals","kind":"identifier"}],"url":"\/documentation\/signalhandler\/signals","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Signals","kind":"identifier"}],"type":"topic","abstract":[{"text":"*Nix signals","type":"text"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"type":"topic","navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignalHandler","kind":"identifier"}],"url":"\/documentation\/signalhandler\/signalhandler","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","kind":"symbol","title":"SignalHandler","role":"symbol","abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}]},"doc://SignalHandler/documentation/SignalHandler":{"kind":"symbol","url":"\/documentation\/signalhandler","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","abstract":[],"type":"topic","role":"collection","title":"SignalHandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/signals","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"signals"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"kind":"text","text":"]"}],"type":"topic","abstract":[{"text":"Signals registered to be handled","type":"text"}],"title":"signals"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/signalhandler\/signalhandler\/start()","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","kind":"symbol","title":"start()","role":"symbol","abstract":[{"text":"Starts handling ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","type":"reference"},{"text":" registered asynchronously as they being caught","type":"text"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"type":"topic","role":"symbol","abstract":[{"text":"Start handling signals","type":"text"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)","title":"start(with:handler:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"kind":"symbol"}}}