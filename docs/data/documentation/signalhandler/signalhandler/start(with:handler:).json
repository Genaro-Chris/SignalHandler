{"abstract":[{"type":"text","text":"Start handling signals"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"signals"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Variadic signals to register"}],"type":"paragraph"}],"name":"signals"},{"content":[{"inlineContent":[{"type":"text","text":"callback to execute when the signals are being caught"}],"type":"paragraph"}],"name":"handler"}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides a quick way to start handle signals without the stress of instantiating the "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","isActive":true,"type":"reference"},{"type":"text","text":" type and starting the handler by calling "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","isActive":true,"type":"reference"},{"type":"text","text":" with just"},{"type":"text","text":" "},{"type":"text","text":"one line or few lines of codes"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Code example of this method usage:"}]},{"type":"codeListing","syntax":"swift","code":["    async let signalHandler = SignalHandler.start(with: .SIGINT, .SIGQUIT, .SIGTSTP) { _ in","        \/\/ Code to clean up resources held","        print(\"Quitting\")","    }"]},{"type":"paragraph","inlineContent":[{"text":"Or","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["    Task {","        await SignalHandler.start(with: .SIGINT, .SIGQUIT) { _ in","            \/\/ Code to clean up resources held","            print(\"Closing socket\")        ","        }","    }"]}]}],"metadata":{"symbolKind":"method","roleHeading":"Type Method","title":"start(with:handler:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"modules":[{"name":"SignalHandler"}],"externalID":"s:13SignalHandlerAAC5start4with7handleryAA7SignalsOd_ys5Int32VXCtYaFZ","role":"symbol"},"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler\/start(with:handler:)"]}],"identifier":{"url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"role":"symbol","navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"type":"topic","title":"SignalHandler","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SignalHandler"}],"url":"\/documentation\/signalhandler\/signalhandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)","title":"start(with:handler:)","abstract":[{"text":"Start handling signals","type":"text"}],"role":"symbol","kind":"symbol","type":"topic"},"doc://SignalHandler/documentation/SignalHandler":{"abstract":[],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","url":"\/documentation\/signalhandler","kind":"symbol","title":"SignalHandler","type":"topic","role":"collection"},"doc://SignalHandler/documentation/SignalHandler/Signals":{"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Signals","kind":"identifier"}],"navigatorTitle":[{"text":"Signals","kind":"identifier"}],"url":"\/documentation\/signalhandler\/signals","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","kind":"symbol","abstract":[{"type":"text","text":"*Nix signals"}],"title":"Signals","role":"symbol"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"signals"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"kind":"text","text":"]"}],"kind":"symbol","role":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/signals","type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","abstract":[{"type":"text","text":"Signals registered to be handled"}],"title":"signals"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"kind":"symbol","role":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/start()","type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","abstract":[{"text":"Starts handling ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","type":"reference"},{"text":" registered asynchronously as they being caught","type":"text"}],"title":"start()"}}}