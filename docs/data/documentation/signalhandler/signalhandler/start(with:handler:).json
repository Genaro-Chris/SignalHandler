{"sections":[],"identifier":{"url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","interfaceLanguage":"swift"},"metadata":{"externalID":"s:13SignalHandlerAAC5start4with7handleryAA7SignalsOd_ys5Int32VXCtYaFZ","roleHeading":"Type Method","title":"start(with:handler:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"modules":[{"name":"SignalHandler"}],"symbolKind":"method"},"abstract":[{"text":"Start handling signals","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"signals"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","text":"Signals"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Variadic signals to register","type":"text"}]}],"name":"signals"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"callback to execute when the signals are being caught"}]}],"name":"handler"}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Provides a quick way to start handle signals without the stress of instantiating the "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"reference","isActive":true},{"type":"text","text":" type and starting the handler by calling "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","type":"reference","isActive":true},{"type":"text","text":" with just"},{"type":"text","text":" "},{"type":"text","text":"one line or few lines of codes"}],"type":"paragraph"},{"inlineContent":[{"text":"Code example of this method usage:","type":"text"}],"type":"paragraph"},{"code":["    async let signalHandler = SignalHandler.start(with: .SIGINT, .SIGQUIT, .SIGTSTP) { _ in","        \/\/ Code to clean up resources held","        print(\"Quitting\")","    }"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Or","type":"text"}],"type":"paragraph"},{"code":["    Task {","        await SignalHandler.start(with: .SIGINT, .SIGQUIT) { _ in","            \/\/ Code to clean up resources held","            print(\"Closing socket\")        ","        }","    }"],"syntax":"swift","type":"codeListing"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"variants":[{"paths":["\/documentation\/signalhandler\/signalhandler\/start(with:handler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"role":"symbol","abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"url":"\/documentation\/signalhandler\/signalhandler","title":"SignalHandler"},"doc://SignalHandler/documentation/SignalHandler":{"role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"topic","url":"\/documentation\/signalhandler","title":"SignalHandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","type":"topic","kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"start(with:handler:)","abstract":[{"text":"Start handling signals","type":"text"}]},"doc://SignalHandler/documentation/SignalHandler/Signals":{"role":"symbol","abstract":[{"text":"*Nix signals","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","navigatorTitle":[{"text":"Signals","kind":"identifier"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Signals","kind":"identifier"}],"url":"\/documentation\/signalhandler\/signals","title":"Signals"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"url":"\/documentation\/signalhandler\/signalhandler\/signals","type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signals","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"]","kind":"text"}],"kind":"symbol","role":"symbol","title":"signals","abstract":[{"text":"Signals registered to be handled","type":"text"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"start()","kind":"symbol","role":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","abstract":[{"text":"Starts handling ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","type":"reference"},{"text":" registered asynchronously as they being caught","type":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/start()"}}}