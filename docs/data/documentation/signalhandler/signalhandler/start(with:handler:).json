{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"nonisolated","kind":"keyword"},{"text":" ","kind":"text"},{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"signals","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Variadic signals to register"}],"type":"paragraph"}],"name":"signals"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"callback to execute when the signals are being caught"}]}],"name":"handler"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"Provides a quick way to start handle signals without the stress of instantiating the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler"},{"type":"text","text":" type and starting the handler by calling "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"},{"type":"text","text":" with just"},{"type":"text","text":" "},{"type":"text","text":"one line or few lines of codes"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Code example of this method usage:"}],"type":"paragraph"},{"code":["    async let signalHandler = SignalHandler.start(with: .SIGINT, .SIGQUIT, .SIGTSTP) { _ in","        \/\/ Code to clean up resources held","        print(\"Quitting\")","    }"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Or"}],"type":"paragraph"},{"code":["    Task {","        await SignalHandler.start(with: .SIGINT, .SIGQUIT) { _ in","            \/\/ Code to clean up resources held","            print(\"Closing socket\")        ","        }","    }"],"type":"codeListing","syntax":"swift"}]}],"metadata":{"title":"start(with:handler:)","roleHeading":"Type Method","role":"symbol","externalID":"s:13SignalHandlerAAC5start4with7handleryAA7SignalsOd_ys5Int32VXCtYaFZ","symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"modules":[{"name":"SignalHandler"}]},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"abstract":[{"type":"text","text":"Start handling signals"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/signalhandler\/signalhandler\/start(with:handler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Start handling signals"}],"url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)","role":"symbol","title":"start(with:handler:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","text":"Signals"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}]},"doc://SignalHandler/documentation/SignalHandler/Signals":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Signals"}],"abstract":[{"type":"text","text":"*Nix signals"}],"url":"\/documentation\/signalhandler\/signals","role":"symbol","title":"Signals","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Signals"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Signals registered to be handled"}],"url":"\/documentation\/signalhandler\/signalhandler\/signals","role":"symbol","title":"signals","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"signals"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","text":"Signals"},{"kind":"text","text":"]"}]},"doc://SignalHandler/documentation/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"topic","kind":"symbol","abstract":[],"url":"\/documentation\/signalhandler","role":"collection","title":"SignalHandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"url":"\/documentation\/signalhandler\/signalhandler","role":"symbol","title":"SignalHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Starts handling "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","type":"reference","isActive":true},{"text":" registered asynchronously as they being caught","type":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/start()","role":"symbol","title":"start()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}]}}}