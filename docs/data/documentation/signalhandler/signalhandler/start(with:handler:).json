{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler\/start(with:handler:)"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"signals"},{"kind":"text","text":": "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","kind":"typeIdentifier","text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"platforms":["Linux"],"languages":["swift"]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Variadic signals to register"}]}],"name":"signals"},{"content":[{"inlineContent":[{"text":"callback to execute when the signals are being caught","type":"text"}],"type":"paragraph"}],"name":"handler"}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Provides a quick way to start handle signals without the stress of instantiating the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"reference"},{"text":" type and starting the handler by calling ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","type":"reference"},{"text":" with just","type":"text"},{"text":" ","type":"text"},{"text":"one line or few lines of codes","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Code example of this method usage:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["    async let signalHandler = SignalHandler.start(with: .SIGINT, .SIGQUIT, .SIGTSTP) { _ in","        \/\/ Code to clean up resources held","        print(\"Quitting\")","    }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or"}]},{"type":"codeListing","syntax":"swift","code":["    Task {","        await SignalHandler.start(with: .SIGINT, .SIGQUIT) { _ in","            \/\/ Code to clean up resources held","            print(\"Closing socket\")        ","        }","    }"]}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"text":"Start handling signals","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)"},"metadata":{"role":"symbol","title":"start(with:handler:)","symbolKind":"method","externalID":"s:13SignalHandlerAAC5start4with7handleryAA7SignalsOd_ys5Int32VXCtYaFZ","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"modules":[{"name":"SignalHandler"}]},"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"start"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"start(with:handler:)","url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)","kind":"symbol","type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","role":"symbol","abstract":[{"text":"Start handling signals","type":"text"}]},"doc://SignalHandler/documentation/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"topic","url":"\/documentation\/signalhandler","kind":"symbol","title":"SignalHandler","role":"collection","abstract":[]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","type":"topic","url":"\/documentation\/signalhandler\/signalhandler","kind":"symbol","title":"SignalHandler","role":"symbol","abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}]},"doc://SignalHandler/documentation/SignalHandler/Signals":{"navigatorTitle":[{"text":"Signals","kind":"identifier"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","type":"topic","url":"\/documentation\/signalhandler\/signals","kind":"symbol","title":"Signals","role":"symbol","abstract":[{"text":"*Nix signals","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Signals","kind":"identifier"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"type":"topic","url":"\/documentation\/signalhandler\/signalhandler\/signals","role":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","title":"signals","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"signals"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"kind":"text","text":"]"}],"kind":"symbol","abstract":[{"type":"text","text":"Signals registered to be handled"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"type":"topic","url":"\/documentation\/signalhandler\/signalhandler\/start()","role":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","title":"start()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"kind":"symbol","abstract":[{"text":"Starts handling ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","type":"reference","isActive":true},{"text":" registered asynchronously as they being caught","type":"text"}]}}}