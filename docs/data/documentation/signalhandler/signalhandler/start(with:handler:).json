{"kind":"symbol","sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"title":"start(with:handler:)","externalID":"s:13SignalHandlerAAC5start4with7handleryAA7SignalsOd_ys5Int32VXCtYaFZ","roleHeading":"Type Method","symbolKind":"method","role":"symbol","modules":[{"name":"SignalHandler"}]},"abstract":[{"text":"Start handling signals","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"nonisolated","kind":"keyword"},{"text":" ","kind":"text"},{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"signals","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"languages":["swift"],"platforms":["Linux"]}]},{"parameters":[{"name":"signals","content":[{"type":"paragraph","inlineContent":[{"text":"Variadic signals to register","type":"text"}]}]},{"name":"handler","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"callback to execute when the signals are being caught"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides a quick way to start handle signals without the stress of instantiating the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler"},{"type":"text","text":" type and starting the handler by calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"},{"type":"text","text":" with just"},{"type":"text","text":" "},{"type":"text","text":"one line or few lines of codes"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Code example of this method usage:"}]},{"type":"codeListing","syntax":"swift","code":["    async let signalHandler = SignalHandler.start(with: .SIGINT, .SIGQUIT, .SIGTSTP) { _ in","        \/\/ Code to clean up resources held","        print(\"Quitting\")","    }"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or"}]},{"type":"codeListing","syntax":"swift","code":["    Task {","        await SignalHandler.start(with: .SIGINT, .SIGQUIT) { _ in","            \/\/ Code to clean up resources held","            print(\"Closing socket\")        ","        }","    }"]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler\/start(with:handler:)"]}],"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"identifier":{"url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"kind":"symbol","title":"SignalHandler","role":"symbol","type":"topic","url":"\/documentation\/signalhandler\/signalhandler","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"},"doc://SignalHandler/documentation/SignalHandler":{"role":"collection","url":"\/documentation\/signalhandler","kind":"symbol","title":"SignalHandler","type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","abstract":[]},"doc://SignalHandler/documentation/SignalHandler/Signals":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Signals","kind":"identifier"}],"role":"symbol","url":"\/documentation\/signalhandler\/signals","kind":"symbol","title":"Signals","type":"topic","navigatorTitle":[{"text":"Signals","kind":"identifier"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","abstract":[{"text":"*Nix signals","type":"text"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"role":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/start()","abstract":[{"text":"Starts handling ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","isActive":true,"type":"reference"},{"text":" registered asynchronously as they being caught","type":"text"}],"title":"start()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"start"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"abstract":[{"type":"text","text":"Start handling signals"}],"kind":"symbol","title":"start(with:handler:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"role":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/signals","abstract":[{"text":"Signals registered to be handled","type":"text"}],"title":"signals","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signals","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","text":"Signals"},{"kind":"text","text":"]"}],"type":"topic"}}}