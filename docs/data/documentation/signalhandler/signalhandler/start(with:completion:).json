{"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"nonisolated","kind":"keyword"},{"text":" ","kind":"text"},{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"signals","kind":"internalParam"},{"text":": [","kind":"text"},{"text":"Signals","kind":"typeIdentifier","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"], ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}]}],"kind":"declarations"},{"parameters":[{"name":"signals","content":[{"type":"paragraph","inlineContent":[{"text":"Array of signals to register","type":"text"}]}]},{"name":"completion","content":[{"type":"paragraph","inlineContent":[{"text":"callback to execute when the signals are being caught","type":"text"}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides a quick way to start handle signals without the stress of instantiating the "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"reference","isActive":true},{"type":"text","text":" type and starting the handler by calling "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","type":"reference","isActive":true},{"type":"text","text":" with just"},{"type":"text","text":" "},{"type":"text","text":"one line or few lines of codes"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Code example of this usage:"}]},{"type":"codeListing","syntax":"swift","code":["    async let signalHandler = SignalHandler.start(with: [.SIGINT, .SIGQUIT]) { _ in","        \/\/ Code to clean up resources held","        print(\"Closing socket\")        ","    }"]},{"type":"paragraph","inlineContent":[{"text":"Or","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["    Task {","        await SignalHandler.start(with: [.SIGINT, .SIGQUIT]) { _ in","            \/\/ Code to clean up resources held","            print(\"Closing socket\")        ","        }","    }"]}],"kind":"content"}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Start handling signals"}],"metadata":{"title":"start(with:completion:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"modules":[{"name":"SignalHandler"}],"externalID":"s:13SignalHandlerAAC5start4with10completionySayAA7SignalsOG_ys5Int32VXCtYaFZ","role":"symbol","roleHeading":"Type Method","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)"},"kind":"symbol","variants":[{"paths":["\/documentation\/signalhandler\/signalhandler\/start(with:completion:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:completion:)":{"url":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)","type":"topic","title":"start(with:completion:)","abstract":[{"type":"text","text":"Start handling signals"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","kind":"symbol"},"doc://SignalHandler/documentation/SignalHandler/Signals":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Signals"}],"abstract":[{"type":"text","text":"*Nix signals"}],"url":"\/documentation\/signalhandler\/signals","role":"symbol","title":"Signals","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Signals"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Signals registered to be handled"}],"url":"\/documentation\/signalhandler\/signalhandler\/signals","role":"symbol","title":"signals","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"signals"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","text":"Signals"},{"kind":"text","text":"]"}]},"doc://SignalHandler/documentation/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"topic","kind":"symbol","abstract":[],"url":"\/documentation\/signalhandler","role":"collection","title":"SignalHandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"url":"\/documentation\/signalhandler\/signalhandler","role":"symbol","title":"SignalHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Starts handling "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","type":"reference","isActive":true},{"text":" registered asynchronously as they being caught","type":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/start()","role":"symbol","title":"start()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}]}}}