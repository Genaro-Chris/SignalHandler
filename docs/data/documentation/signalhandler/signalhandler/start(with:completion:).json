{"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"signals"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}]}],"kind":"declarations"},{"parameters":[{"name":"signals","content":[{"inlineContent":[{"type":"text","text":"Array of signals to register"}],"type":"paragraph"}]},{"name":"completion","content":[{"inlineContent":[{"type":"text","text":"callback to execute when the signals are being caught"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Provides a quick way to start handle signals without the stress of instantiating the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"reference"},{"text":" type and starting the handler by calling ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","type":"reference"},{"text":" with just","type":"text"},{"text":" ","type":"text"},{"text":"one line or few lines of codes","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Code example of this usage:","type":"text"}]},{"type":"codeListing","code":["    async let signalHandler = SignalHandler.start(with: [.SIGINT, .SIGQUIT]) { _ in","        \/\/ Code to clean up resources held","        print(\"Closing socket\")        ","    }"],"syntax":"swift"}]}],"metadata":{"symbolKind":"method","roleHeading":"Type Method","title":"start(with:completion:)","modules":[{"name":"SignalHandler"}],"role":"symbol","externalID":"s:13SignalHandlerAAC5start4with10completionySayAA7SignalsOG_ys5Int32VXCtYaFZ","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}]},"abstract":[{"type":"text","text":"Start handling signals"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler\/start(with:completion:)"]}],"kind":"symbol","sections":[],"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/start()","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","role":"symbol","title":"start()","abstract":[{"type":"text","text":"Starts handling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals"},{"type":"text","text":" registered asynchronously as they being caught"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"type":"topic"},"doc://SignalHandler/documentation/SignalHandler/Signals":{"abstract":[{"text":"*Nix signals","type":"text"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Signals"}],"type":"topic","title":"Signals","navigatorTitle":[{"kind":"identifier","text":"Signals"}],"url":"\/documentation\/signalhandler\/signals","kind":"symbol","role":"symbol"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignalHandler","kind":"identifier"}],"type":"topic","title":"SignalHandler","navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"url":"\/documentation\/signalhandler\/signalhandler","kind":"symbol","role":"symbol"},"doc://SignalHandler/documentation/SignalHandler":{"kind":"symbol","role":"collection","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","abstract":[],"url":"\/documentation\/signalhandler","type":"topic","title":"SignalHandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/signals","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","role":"symbol","title":"signals","abstract":[{"type":"text","text":"Signals registered to be handled"}],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"signals"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:completion:)":{"title":"start(with:completion:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","text":"Signals"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"role":"symbol","kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)","abstract":[{"text":"Start handling signals","type":"text"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)"}}}