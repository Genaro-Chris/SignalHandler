{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"keyword"},{"text":" ","kind":"text"},{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"signals","kind":"internalParam"},{"text":": [","kind":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Array of signals to register"}]}],"name":"signals"},{"content":[{"inlineContent":[{"text":"callback to execute when the signals are being caught","type":"text"}],"type":"paragraph"}],"name":"completion"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Provides a quick way to start handle signals without the stress of instantiating the "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"reference","isActive":true},{"type":"text","text":" type and starting the handler by calling "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","type":"reference","isActive":true},{"type":"text","text":" with just"},{"type":"text","text":" "},{"type":"text","text":"one line or few lines of codes"}],"type":"paragraph"},{"inlineContent":[{"text":"Code example of this usage:","type":"text"}],"type":"paragraph"},{"code":["    async let signalHandler = SignalHandler.start(with: [.SIGINT, .SIGQUIT]) { _ in","        \/\/ Code to clean up resources held","        print(\"Closing socket\")        ","    }"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Or"}],"type":"paragraph"},{"code":["    Task {","        await SignalHandler.start(with: [.SIGINT, .SIGQUIT]) { _ in","            \/\/ Code to clean up resources held","            print(\"Closing socket\")        ","        }","    }"],"type":"codeListing","syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler\/start(with:completion:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)"},"sections":[],"abstract":[{"type":"text","text":"Start handling signals"}],"metadata":{"title":"start(with:completion:)","role":"symbol","symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"roleHeading":"Type Method","externalID":"s:13SignalHandlerAAC5start4with10completionySayAA7SignalsOG_ys5Int32VXCtYaFZ","modules":[{"name":"SignalHandler"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:completion:)":{"abstract":[{"type":"text","text":"Start handling signals"}],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","title":"start(with:completion:)","url":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"text":": [","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"], ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}]},"doc://SignalHandler/documentation/SignalHandler/Signals":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","url":"\/documentation\/signalhandler\/signals","navigatorTitle":[{"text":"Signals","kind":"identifier"}],"title":"Signals","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Signals","kind":"identifier"}],"abstract":[{"text":"*Nix signals","type":"text"}]},"doc://SignalHandler/documentation/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","url":"\/documentation\/signalhandler","title":"SignalHandler","type":"topic","kind":"symbol","role":"collection","abstract":[]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"role":"symbol","type":"topic","title":"SignalHandler","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SignalHandler"}],"url":"\/documentation\/signalhandler\/signalhandler","abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"url":"\/documentation\/signalhandler\/signalhandler\/signals","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","title":"signals","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Signals registered to be handled","type":"text"}],"fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"signals","kind":"identifier"},{"kind":"text","text":": ["},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"kind":"text","text":"]"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"title":"start()","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","kind":"symbol","role":"symbol","abstract":[{"text":"Starts handling ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","type":"reference","isActive":true},{"text":" registered asynchronously as they being caught","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"url":"\/documentation\/signalhandler\/signalhandler\/start()","type":"topic"}}}