{"metadata":{"title":"start(with:completion:)","roleHeading":"Type Method","modules":[{"name":"SignalHandler"}],"externalID":"s:13SignalHandlerAAC5start4with10completionySayAA7SignalsOG_ys5Int32VXCtYaFZ","symbolKind":"method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","text":"Signals"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"role":"symbol"},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Start handling signals"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"nonisolated"},{"kind":"text","text":" "},{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"signals"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","text":"Signals"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Array of signals to register"}],"type":"paragraph"}],"name":"signals"},{"content":[{"type":"paragraph","inlineContent":[{"text":"callback to execute when the signals are being caught","type":"text"}]}],"name":"completion"}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Provides a quick way to start handle signals without the stress of instantiating the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler"},{"type":"text","text":" type and starting the handler by calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"},{"type":"text","text":" with just"},{"type":"text","text":" "},{"type":"text","text":"one line or few lines of codes"}],"type":"paragraph"},{"inlineContent":[{"text":"Code example of this usage:","type":"text"}],"type":"paragraph"},{"code":["    async let signalHandler = SignalHandler.start(with: [.SIGINT, .SIGQUIT]) { _ in","        \/\/ Code to clean up resources held","        print(\"Closing socket\")        ","    }"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Or"}],"type":"paragraph"},{"code":["    Task {","        await SignalHandler.start(with: [.SIGINT, .SIGQUIT]) { _ in","            \/\/ Code to clean up resources held","            print(\"Closing socket\")        ","        }","    }"],"syntax":"swift","type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/signalhandler\/signalhandler\/start(with:completion:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:completion:)":{"kind":"symbol","type":"topic","title":"start(with:completion:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"], ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","url":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)","abstract":[{"type":"text","text":"Start handling signals"}],"role":"symbol"},"doc://SignalHandler/documentation/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","role":"collection","title":"SignalHandler","kind":"symbol","type":"topic","abstract":[],"url":"\/documentation\/signalhandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"title":"SignalHandler","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","type":"topic","kind":"symbol","abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"url":"\/documentation\/signalhandler\/signalhandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","role":"symbol","type":"topic","abstract":[{"text":"Signals registered to be handled","type":"text"}],"title":"signals","url":"\/documentation\/signalhandler\/signalhandler\/signals","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signals","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals","kind":"typeIdentifier"},{"text":"]","kind":"text"}]},"doc://SignalHandler/documentation/SignalHandler/Signals":{"kind":"symbol","role":"symbol","abstract":[{"text":"*Nix signals","type":"text"}],"title":"Signals","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Signals"}],"navigatorTitle":[{"kind":"identifier","text":"Signals"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","type":"topic","url":"\/documentation\/signalhandler\/signals"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"kind":"symbol","type":"topic","title":"start()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","url":"\/documentation\/signalhandler\/signalhandler\/start()","abstract":[{"type":"text","text":"Starts handling "},{"type":"reference","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","isActive":true},{"type":"text","text":" registered asynchronously as they being caught"}],"role":"symbol"}}}