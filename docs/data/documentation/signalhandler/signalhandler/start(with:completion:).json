{"abstract":[{"type":"text","text":"Start handling signals"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler\/start(with:completion:)"]}],"kind":"symbol","identifier":{"url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"nonisolated","kind":"keyword"},{"text":" ","kind":"text"},{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"signals","kind":"internalParam"},{"text":": [","kind":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"], ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"signals","content":[{"type":"paragraph","inlineContent":[{"text":"Array of signals to register","type":"text"}]}]},{"name":"completion","content":[{"type":"paragraph","inlineContent":[{"text":"callback to execute when the signals are being caught","type":"text"}]}]}]},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"text":"Provides a quick way to start handle signals without the stress of instantiating the ","type":"text"},{"type":"reference","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","isActive":true},{"text":" type and starting the handler by calling ","type":"text"},{"type":"reference","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","isActive":true},{"text":" with just","type":"text"},{"text":" ","type":"text"},{"text":"one line or few lines of codes","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Code example of this usage:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["    async let signalHandler = SignalHandler.start(with: [.SIGINT, .SIGQUIT]) { _ in","        \/\/ Code to clean up resources held","        print(\"Closing socket\")        ","    }"]},{"inlineContent":[{"text":"Or","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["    Task {","        await SignalHandler.start(with: [.SIGINT, .SIGQUIT]) { _ in","            \/\/ Code to clean up resources held","            print(\"Closing socket\")        ","        }","    }"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"title":"start(with:completion:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","text":"Signals"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"externalID":"s:13SignalHandlerAAC5start4with10completionySayAA7SignalsOG_ys5Int32VXCtYaFZ","roleHeading":"Type Method","symbolKind":"method","modules":[{"name":"SignalHandler"}],"role":"symbol"},"sections":[],"references":{"doc://SignalHandler/documentation/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","url":"\/documentation\/signalhandler","kind":"symbol","type":"topic","role":"collection","title":"SignalHandler","abstract":[]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:completion:)":{"abstract":[{"text":"Start handling signals","type":"text"}],"title":"start(with:completion:)","role":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"kind":"symbol","type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"abstract":[{"text":"Signals registered to be handled","type":"text"}],"title":"signals","role":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/signals","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"signals"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals"},{"kind":"text","text":"]"}],"kind":"symbol","type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"abstract":[{"text":"Starts handling ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","isActive":true,"type":"reference"},{"text":" registered asynchronously as they being caught","type":"text"}],"title":"start()","role":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/start()","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"kind":"symbol","type":"topic"},"doc://SignalHandler/documentation/SignalHandler/Signals":{"role":"symbol","type":"topic","url":"\/documentation\/signalhandler\/signals","title":"Signals","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Signals"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Signals","kind":"identifier"}],"abstract":[{"text":"*Nix signals","type":"text"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"url":"\/documentation\/signalhandler\/signalhandler","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"title":"SignalHandler","abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}]}}}