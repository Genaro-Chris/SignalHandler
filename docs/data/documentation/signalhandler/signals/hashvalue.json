{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"externalID":"s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp::SYNTHESIZED::s:13SignalHandler7SignalsO","roleHeading":"Instance Property","extendedModule":"Swift","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"title":"hashValue","symbolKind":"property","role":"symbol","modules":[{"name":"SignalHandler"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]}},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals\/hashValue"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signals\/hashvalue"]}],"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals\/RawRepresentable-Implementations"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"code":"RawRepresentable.hashValue","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://SignalHandler/documentation/SignalHandler/Signals/RawRepresentable-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals\/RawRepresentable-Implementations","title":"RawRepresentable Implementations","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/signalhandler\/signals\/rawrepresentable-implementations"},"doc://SignalHandler/documentation/SignalHandler/Signals":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Signals"}],"abstract":[{"type":"text","text":"*Nix signals"}],"title":"Signals","kind":"symbol","type":"topic","url":"\/documentation\/signalhandler\/signals","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","navigatorTitle":[{"kind":"identifier","text":"Signals"}],"role":"symbol"},"doc://SignalHandler/documentation/SignalHandler":{"abstract":[],"title":"SignalHandler","kind":"symbol","type":"topic","url":"\/documentation\/signalhandler","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","role":"collection"},"doc://SignalHandler/documentation/SignalHandler/Signals/hashValue":{"type":"topic","role":"symbol","url":"\/documentation\/signalhandler\/signals\/hashvalue","title":"hashValue","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals\/hashValue","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[]}}}