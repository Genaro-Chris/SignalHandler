{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals\/hashValue"},"variants":[{"paths":["\/documentation\/signalhandler\/signals\/hashvalue"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]}],"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals\/RawRepresentable-Implementations"]]},"metadata":{"modules":[{"name":"SignalHandler"}],"roleHeading":"Instance Property","externalID":"s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp::SYNTHESIZED::s:13SignalHandler7SignalsO","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"symbolKind":"property","title":"hashValue","extendedModule":"Swift","role":"symbol"},"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"RawRepresentable.hashValue","type":"codeVoice"},{"text":".","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","references":{"doc://SignalHandler/documentation/SignalHandler/Signals":{"type":"topic","title":"Signals","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Signals"}],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals","abstract":[{"text":"*Nix signals","type":"text"}],"role":"symbol","url":"\/documentation\/signalhandler\/signals","navigatorTitle":[{"kind":"identifier","text":"Signals"}]},"doc://SignalHandler/documentation/SignalHandler/Signals/hashValue":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Self"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"RawValue"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals\/hashValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"title":"hashValue","abstract":[],"url":"\/documentation\/signalhandler\/signals\/hashvalue","role":"symbol","type":"topic"},"doc://SignalHandler/documentation/SignalHandler/Signals/RawRepresentable-Implementations":{"role":"collectionGroup","kind":"article","type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/Signals\/RawRepresentable-Implementations","url":"\/documentation\/signalhandler\/signals\/rawrepresentable-implementations","abstract":[],"title":"RawRepresentable Implementations"},"doc://SignalHandler/documentation/SignalHandler":{"role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"topic","title":"SignalHandler","url":"\/documentation\/signalhandler"}}}