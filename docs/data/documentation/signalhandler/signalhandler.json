{"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignalHandler","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"It catches the signal asynchronously on the fly while executing the callback supplied to it."},{"type":"text","text":" "},{"type":"text","text":"It provides a way to clean up and exit if a signal registered is being caught"}],"type":"paragraph"},{"inlineContent":[{"text":"It should always be the first code and its encouraged to run in parallel with ","type":"text"},{"code":"async let","type":"codeVoice"},{"text":" syntax in order to enable it catch signals as soon as your code start executing","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Always remember to call "},{"isActive":true,"type":"reference","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"},{"type":"text","text":" otherwise the registered signals wonâ€™t be caught"}],"type":"paragraph"},{"inlineContent":[{"text":"Example of its usage","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["    let exitHandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","        print(\"Closing this program\")","        \/\/ Code to clean up resources used","    }","    async let _ = exitHandler.start()"],"type":"codeListing"},{"inlineContent":[{"text":"Or","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["    Task {","        let exithandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","            print(\"Closing this program\")","            \/\/ Code to clean up resources used","        }","        await exithandler.start()","    }"],"type":"codeListing"}]}],"variants":[{"paths":["\/documentation\/signalhandler\/signalhandler"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"relationshipsSections":[{"identifiers":["doc:\/\/SignalHandler\/SQ","doc:\/\/SignalHandler\/s8SendableP","doc:\/\/SignalHandler\/ScA","doc:\/\/SignalHandler\/12_Concurrency8AnyActorP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"title":"SignalHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignalHandler","kind":"identifier"}],"navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"roleHeading":"Class","modules":[{"name":"SignalHandler"}],"symbolKind":"class","externalID":"s:13SignalHandlerAAC","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u"]},{"title":"Instance Properties","identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals"]},{"title":"Instance Methods","identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"]},{"title":"Type Properties","identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default"]},{"title":"Type Methods","identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations"],"generated":true}],"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","url":"\/documentation\/signalhandler\/signalhandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignalHandler","kind":"identifier"}],"navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"title":"SignalHandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/signalhandler\/signalhandler\/start()","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Starts handling ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","isActive":true,"type":"reference"},{"text":" registered asynchronously as they being caught","type":"text"}],"title":"start()","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Start handling signals","type":"text"}],"title":"start(with:handler:)","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2t65u":{"abstract":[{"text":"Instantiates this type","type":"text"}],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u","url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2t65u","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"signals","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"], ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ()))","kind":"text"}],"title":"init(signals:handler:)"},"doc://SignalHandler/ScA":{"type":"unresolvable","title":"_Concurrency.Actor","identifier":"doc:\/\/SignalHandler\/ScA"},"doc://SignalHandler/12_Concurrency8AnyActorP":{"type":"unresolvable","title":"_Concurrency.AnyActor","identifier":"doc:\/\/SignalHandler\/12_Concurrency8AnyActorP"},"doc://SignalHandler/documentation/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","abstract":[],"role":"collection","kind":"symbol","title":"SignalHandler","url":"\/documentation\/signalhandler","type":"topic"},"doc://SignalHandler/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/SignalHandler\/s8SendableP"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/default":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`default`","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SignalHandler","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandlerAAC"}],"url":"\/documentation\/signalhandler\/signalhandler\/default","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"A simple singleton for the ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","isActive":true,"type":"reference"},{"text":" type","type":"text"}],"title":"default","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/Equatable-Implementations":{"url":"\/documentation\/signalhandler\/signalhandler\/equatable-implementations","kind":"article","role":"collectionGroup","type":"topic","abstract":[],"title":"Equatable Implementations","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:completion:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"], ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Start handling signals","type":"text"}],"title":"start(with:completion:)","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)"},"doc://SignalHandler/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/SignalHandler\/SQ"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"signals"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","text":"Signals"},{"text":"]","kind":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/signals","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Signals registered to be handled","type":"text"}],"title":"signals","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"text":") -> ())","kind":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/handler","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}],"title":"handler","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2p7ww":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"signals"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","text":"Signals"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ()))","kind":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2p7ww","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Instantiates this type","type":"text"}],"title":"init(signals:handler:)","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww"}}}