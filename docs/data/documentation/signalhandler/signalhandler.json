{"topicSections":[{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u"],"title":"Initializers"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals"],"title":"Instance Properties"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"],"title":"Instance Methods"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default"],"title":"Type Properties"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)"],"title":"Type Methods"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations"],"generated":true,"title":"Default Implementations"}],"abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler"]]},"variants":[{"paths":["\/documentation\/signalhandler\/signalhandler"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"modules":[{"name":"SignalHandler"}],"symbolKind":"class","externalID":"s:13SignalHandlerAAC","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"role":"symbol","title":"SignalHandler"},"relationshipsSections":[{"identifiers":["doc:\/\/SignalHandler\/SQ","doc:\/\/SignalHandler\/s8SendableP","doc:\/\/SignalHandler\/ScA","doc:\/\/SignalHandler\/12_Concurrency8AnyActorP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"It catches the signal asynchronously on the fly while executing the callback supplied to it.","type":"text"},{"text":" ","type":"text"},{"text":"It provides a way to clean up and exit if a signal registered is being caught","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It should always be the first code and its encouraged to run in parallel with "},{"type":"codeVoice","code":"async let"},{"type":"text","text":" syntax in order to enable it catch signals as soon as your code start executing"}]},{"type":"paragraph","inlineContent":[{"text":"Always remember to call ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"},{"text":" otherwise the registered signals wonâ€™t be caught","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Example of its usage","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["    let exitHandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","        print(\"Closing this program\")","        \/\/ Code to clean up resources used","    }","    async let _ = exitHandler.start()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or"}]},{"type":"codeListing","syntax":"swift","code":["    Task {","        let exithandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","            print(\"Closing this program\")","            \/\/ Code to clean up resources used","        }","        await exithandler.start()","    }"]}]}],"kind":"symbol","identifier":{"url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","interfaceLanguage":"swift"},"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2p7ww":{"role":"symbol","abstract":[{"text":"Instantiates this type","type":"text"}],"title":"init(signals:handler:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"signals","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") -> ()))","kind":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2p7ww","type":"topic","kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww"},"doc://SignalHandler/documentation/SignalHandler":{"type":"topic","url":"\/documentation\/signalhandler","abstract":[],"title":"SignalHandler","kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","role":"collection"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/Equatable-Implementations":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations","url":"\/documentation\/signalhandler\/signalhandler\/equatable-implementations","abstract":[],"kind":"article","title":"Equatable Implementations","role":"collectionGroup","type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"role":"symbol","abstract":[{"text":"Starts handling ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","isActive":true,"type":"reference"},{"type":"text","text":" registered asynchronously as they being caught"}],"title":"start()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/signalhandler\/signalhandler\/start()","type":"topic","kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2t65u":{"role":"symbol","abstract":[{"text":"Instantiates this type","type":"text"}],"title":"init(signals:handler:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"signals","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> ()))"}],"url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2t65u","type":"topic","kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/default":{"title":"default","url":"\/documentation\/signalhandler\/signalhandler\/default","type":"topic","abstract":[{"text":"A simple singleton for the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler"},{"text":" type","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"`default`"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SignalHandler","preciseIdentifier":"s:13SignalHandlerAAC"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"abstract":[{"text":"Signals registered to be handled","type":"text"}],"title":"signals","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","url":"\/documentation\/signalhandler\/signalhandler\/signals","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"signals"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals"},{"kind":"text","text":"]"}],"type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"role":"symbol","abstract":[{"text":"Start handling signals","type":"text"}],"title":"start(with:handler:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","text":"Signals"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)","type":"topic","kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)"},"doc://SignalHandler/12_Concurrency8AnyActorP":{"type":"unresolvable","title":"_Concurrency.AnyActor","identifier":"doc:\/\/SignalHandler\/12_Concurrency8AnyActorP"},"doc://SignalHandler/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/SignalHandler\/s8SendableP"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","url":"\/documentation\/signalhandler\/signalhandler","kind":"symbol","title":"SignalHandler","abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}]},"doc://SignalHandler/ScA":{"type":"unresolvable","title":"_Concurrency.Actor","identifier":"doc:\/\/SignalHandler\/ScA"},"doc://SignalHandler/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/SignalHandler\/SQ"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:completion:)":{"type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","text":"Signals"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"title":"start(with:completion:)","url":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","abstract":[{"type":"text","text":"Start handling signals"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","type":"topic","role":"symbol","title":"handler","kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())","kind":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/handler","abstract":[{"type":"text","text":"Callback to run if any registered signal is caught"}]}}}