{"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u"],"title":"Initializers"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals"],"title":"Instance Properties"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"],"title":"Instance Methods"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default"],"title":"Type Properties"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)"],"title":"Type Methods"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations"],"generated":true,"title":"Default Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"},"relationshipsSections":[{"identifiers":["doc:\/\/SignalHandler\/SQ","doc:\/\/SignalHandler\/s8SendableP","doc:\/\/SignalHandler\/ScA","doc:\/\/SignalHandler\/12_Concurrency8AnyActorP"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"metadata":{"externalID":"s:13SignalHandlerAAC","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"SignalHandler","kind":"identifier"}],"symbolKind":"class","roleHeading":"Class","navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"modules":[{"name":"SignalHandler"}],"title":"SignalHandler"},"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignalHandler","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"inlineContent":[{"type":"text","text":"It catches the signal asynchronously on the fly while executing the callback supplied to it."},{"type":"text","text":" "},{"type":"text","text":"It provides a way to clean up and exit if a signal registered is being caught"}],"type":"paragraph"},{"inlineContent":[{"text":"It should always be the first code and its encouraged to run in parallel with ","type":"text"},{"code":"async let","type":"codeVoice"},{"text":" syntax in order to enable it catch signals as soon as your code start executing","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Always remember to call ","type":"text"},{"type":"reference","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","isActive":true},{"text":" otherwise the registered signals wonâ€™t be caught","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Example of its usage","type":"text"}],"type":"paragraph"},{"code":["    let exitHandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","        print(\"Closing this program\")","        \/\/ Code to clean up resources used","    }","    async let _ = exitHandler.start()"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Or","type":"text"}],"type":"paragraph"},{"code":["    Task {","        let exithandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","            print(\"Closing this program\")","            \/\/ Code to clean up resources used","        }","        await exithandler.start()","    }"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"role":"symbol","abstract":[{"type":"text","text":"Signals registered to be handled"}],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signals","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic","title":"signals","url":"\/documentation\/signalhandler\/signalhandler\/signals"},"doc://SignalHandler/documentation/SignalHandler":{"role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"topic","title":"SignalHandler","url":"\/documentation\/signalhandler"},"doc://SignalHandler/12_Concurrency8AnyActorP":{"type":"unresolvable","identifier":"doc:\/\/SignalHandler\/12_Concurrency8AnyActorP","title":"_Concurrency.AnyActor"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)","abstract":[{"type":"text","text":"Start handling signals"}],"title":"start(with:handler:)"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/default":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"`default`","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SignalHandler","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandlerAAC"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default","url":"\/documentation\/signalhandler\/signalhandler\/default","abstract":[{"text":"A simple singleton for the ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","isActive":true,"type":"reference"},{"text":" type","type":"text"}],"title":"default"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"type":"topic","title":"start()","url":"\/documentation\/signalhandler\/signalhandler\/start()","abstract":[{"text":"Starts handling ","type":"text"},{"type":"reference","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","isActive":true},{"text":" registered asynchronously as they being caught","type":"text"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","kind":"symbol"},"doc://SignalHandler/ScA":{"identifier":"doc:\/\/SignalHandler\/ScA","type":"unresolvable","title":"_Concurrency.Actor"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2t65u":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"signals","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> ()))"}],"abstract":[{"type":"text","text":"Instantiates this type"}],"url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2t65u","type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u","title":"init(signals:handler:)","role":"symbol"},"doc://SignalHandler/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/SignalHandler\/SQ"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2p7ww":{"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"signals","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ()))","kind":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2p7ww","title":"init(signals:handler:)","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","kind":"symbol","abstract":[{"text":"Instantiates this type","type":"text"}],"role":"symbol"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignalHandler","kind":"identifier"}],"navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"type":"topic","title":"SignalHandler","url":"\/documentation\/signalhandler\/signalhandler","abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","kind":"symbol"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/Equatable-Implementations":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations","role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/signalhandler\/signalhandler\/equatable-implementations","type":"topic","title":"Equatable Implementations"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())","kind":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","url":"\/documentation\/signalhandler\/signalhandler\/handler","abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}],"title":"handler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:completion:)":{"role":"symbol","abstract":[{"text":"Start handling signals","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"], ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"type":"topic","title":"start(with:completion:)","url":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)"},"doc://SignalHandler/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/SignalHandler\/s8SendableP","title":"Swift.Sendable"}}}