{"identifier":{"url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"platforms":["Linux"]}]},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It catches the signal asynchronously on the fly while executing the callback supplied to it."},{"type":"text","text":" "},{"type":"text","text":"It provides a way to clean up and exit if a signal registered is being caught"}]},{"type":"paragraph","inlineContent":[{"text":"It should always be the first code and its encouraged to run in parallel with ","type":"text"},{"code":"async let","type":"codeVoice"},{"text":" syntax in order to enable it catch signals as soon as your code start executing","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Always remember to call "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","isActive":true,"type":"reference"},{"type":"text","text":" otherwise the registered signals wonâ€™t be caught"}]},{"type":"paragraph","inlineContent":[{"text":"Example of its usage","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["    let exitHandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","        print(\"Closing this program\")","        \/\/ Code to clean up resources used","    }","    async let _ = exitHandler.start()"]},{"type":"paragraph","inlineContent":[{"text":"Or","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["    Task {","        let exithandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","            print(\"Closing this program\")","            \/\/ Code to clean up resources used","        }","        await exithandler.start()","    }"]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler"]]},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"symbolKind":"class","externalID":"s:13SignalHandlerAAC","role":"symbol","roleHeading":"Class","navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"modules":[{"name":"SignalHandler"}],"title":"SignalHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"SignalHandler","kind":"identifier"}]},"topicSections":[{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u"],"title":"Initializers"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals"],"title":"Instance Properties"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"],"title":"Instance Methods"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default"],"title":"Type Properties"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)"],"title":"Type Methods"},{"generated":true,"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations"],"title":"Default Implementations"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/SignalHandler\/SQ","doc:\/\/SignalHandler\/s8SendableP","doc:\/\/SignalHandler\/ScA","doc:\/\/SignalHandler\/12_Concurrency8AnyActorP"],"type":"conformsTo","title":"Conforms To"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler"]}],"abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"kind":"symbol","references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2t65u":{"abstract":[{"type":"text","text":"Instantiates this type"}],"title":"init(signals:handler:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"signals","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ()))","kind":"text"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u","role":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2t65u","kind":"symbol","type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())"}],"abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}],"role":"symbol","title":"handler","kind":"symbol","type":"topic","url":"\/documentation\/signalhandler\/signalhandler\/handler","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler"},"doc://SignalHandler/12_Concurrency8AnyActorP":{"title":"_Concurrency.AnyActor","identifier":"doc:\/\/SignalHandler\/12_Concurrency8AnyActorP","type":"unresolvable"},"doc://SignalHandler/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/SignalHandler\/s8SendableP","type":"unresolvable"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"title":"SignalHandler","type":"topic","abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"url":"\/documentation\/signalhandler\/signalhandler","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"kind":"symbol"},"doc://SignalHandler/documentation/SignalHandler":{"url":"\/documentation\/signalhandler","abstract":[],"role":"collection","kind":"symbol","title":"SignalHandler","type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:completion:)":{"kind":"symbol","role":"symbol","type":"topic","title":"start(with:completion:)","url":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)","abstract":[{"text":"Start handling signals","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)"},"doc://SignalHandler/ScA":{"title":"_Concurrency.Actor","identifier":"doc:\/\/SignalHandler\/ScA","type":"unresolvable"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/default":{"abstract":[{"type":"text","text":"A simple singleton for the "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"reference","isActive":true},{"type":"text","text":" type"}],"title":"default","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`default`","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SignalHandler","preciseIdentifier":"s:13SignalHandlerAAC","kind":"typeIdentifier"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default","role":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/default","kind":"symbol","type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"title":"start()","type":"topic","abstract":[{"text":"Starts handling ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","isActive":true,"type":"reference"},{"text":" registered asynchronously as they being caught","type":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/start()","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"kind":"symbol"},"doc://SignalHandler/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/SignalHandler\/SQ","type":"unresolvable"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"title":"signals","type":"topic","abstract":[{"text":"Signals registered to be handled","type":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/signals","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signals","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"symbol"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2p7ww":{"abstract":[{"type":"text","text":"Instantiates this type"}],"title":"init(signals:handler:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"signals","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ()))","kind":"text"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","role":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2p7ww","kind":"symbol","type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)","title":"start(with:handler:)","role":"symbol","kind":"symbol","abstract":[{"text":"Start handling signals","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/Equatable-Implementations":{"title":"Equatable Implementations","type":"topic","abstract":[],"url":"\/documentation\/signalhandler\/signalhandler\/equatable-implementations","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations","role":"collectionGroup","kind":"article"}}}