{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler"]]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u"],"title":"Initializers"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals"],"title":"Instance Properties"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"],"title":"Instance Methods"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default"],"title":"Type Properties"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)"],"title":"Type Methods"},{"generated":true,"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations"],"title":"Default Implementations"}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/SignalHandler\/SQ","doc:\/\/SignalHandler\/s8SendableP","doc:\/\/SignalHandler\/ScA","doc:\/\/SignalHandler\/12_Concurrency8AnyActorP"],"title":"Conforms To"}],"identifier":{"url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","interfaceLanguage":"swift"},"sections":[],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignalHandler","kind":"identifier"}],"roleHeading":"Class","symbolKind":"class","modules":[{"name":"SignalHandler"}],"externalID":"s:13SignalHandlerAAC","navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"role":"symbol","title":"SignalHandler"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignalHandler","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"It catches the signal asynchronously on the fly while executing the callback supplied to it.","type":"text"},{"text":" ","type":"text"},{"text":"It provides a way to clean up and exit if a signal registered is being caught","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It should always be the first code and its encouraged to run in parallel with "},{"type":"codeVoice","code":"async let"},{"type":"text","text":" syntax in order to enable it catch signals as soon as your code start executing"}]},{"type":"paragraph","inlineContent":[{"text":"Always remember to call ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","isActive":true,"type":"reference"},{"text":" otherwise the registered signals wonâ€™t be caught","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Example of its usage","type":"text"}]},{"type":"codeListing","code":["    let exitHandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","        print(\"Closing this program\")","        \/\/ Code to clean up resources used","    }","    async let _ = exitHandler.start()"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Or","type":"text"}]},{"type":"codeListing","code":["    Task {","        let exithandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","            print(\"Closing this program\")","            \/\/ Code to clean up resources used","        }","        await exithandler.start()","    }"],"syntax":"swift"}]}],"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2t65u":{"type":"topic","abstract":[{"type":"text","text":"Instantiates this type"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"signals"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ()))"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u","url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2t65u","title":"init(signals:handler:)"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"url":"\/documentation\/signalhandler\/signalhandler\/handler","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> ())"}],"abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}],"type":"topic","kind":"symbol","title":"handler","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","role":"symbol"},"doc://SignalHandler/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/SignalHandler\/s8SendableP","title":"Swift.Sendable"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"url":"\/documentation\/signalhandler\/signalhandler","role":"symbol","title":"SignalHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Signals registered to be handled"}],"url":"\/documentation\/signalhandler\/signalhandler\/signals","role":"symbol","title":"signals","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"signals"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","text":"Signals"},{"kind":"text","text":"]"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/default":{"type":"topic","abstract":[{"type":"text","text":"A simple singleton for the "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","isActive":true,"type":"reference"},{"type":"text","text":" type"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"`default`"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandlerAAC","text":"SignalHandler"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default","url":"\/documentation\/signalhandler\/signalhandler\/default","title":"default"},"doc://SignalHandler/SQ":{"type":"unresolvable","identifier":"doc:\/\/SignalHandler\/SQ","title":"Swift.Equatable"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:completion:)":{"url":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)","type":"topic","title":"start(with:completion:)","abstract":[{"type":"text","text":"Start handling signals"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","kind":"symbol"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Start handling signals"}],"url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)","role":"symbol","title":"start(with:handler:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","text":"Signals"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/Equatable-Implementations":{"type":"topic","abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations","url":"\/documentation\/signalhandler\/signalhandler\/equatable-implementations","title":"Equatable Implementations"},"doc://SignalHandler/documentation/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"topic","kind":"symbol","abstract":[],"url":"\/documentation\/signalhandler","role":"collection","title":"SignalHandler"},"doc://SignalHandler/12_Concurrency8AnyActorP":{"type":"unresolvable","identifier":"doc:\/\/SignalHandler\/12_Concurrency8AnyActorP","title":"_Concurrency.AnyActor"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2p7ww":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"signals"},{"kind":"text","text":": "},{"preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier","text":"Signals"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier","text":"Int32"},{"kind":"text","text":") -> ()))"}],"role":"symbol","abstract":[{"type":"text","text":"Instantiates this type"}],"url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2p7ww","type":"topic","kind":"symbol","title":"init(signals:handler:)"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Starts handling "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","type":"reference","isActive":true},{"text":" registered asynchronously as they being caught","type":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/start()","role":"symbol","title":"start()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}]},"doc://SignalHandler/ScA":{"type":"unresolvable","identifier":"doc:\/\/SignalHandler\/ScA","title":"_Concurrency.Actor"}}}