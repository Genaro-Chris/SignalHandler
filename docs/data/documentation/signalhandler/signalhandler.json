{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It catches the signal asynchronously on the fly while executing the callback supplied to it."},{"type":"text","text":" "},{"type":"text","text":"It provides a way to clean up and exit if a signal registered is being caught"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It should always be the first code and its encouraged to run in parallel with "},{"type":"codeVoice","code":"async let"},{"type":"text","text":" syntax in order to enable it catch signals as soon as your code start executing"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Always remember to call "},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","type":"reference","isActive":true},{"type":"text","text":" otherwise the registered signals wonâ€™t be caught"}]},{"type":"paragraph","inlineContent":[{"text":"Example of its usage","type":"text"}]},{"syntax":"swift","code":["    let exitHandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","        print(\"Closing this program\")","        \/\/ Code to clean up resources used","    }","    async let _ = exitHandler.start()"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Or"}]},{"syntax":"swift","code":["    Task {","        let exithandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","            print(\"Closing this program\")","            \/\/ Code to clean up resources used","        }","        await exithandler.start()","    }"],"type":"codeListing"}]}],"kind":"symbol","metadata":{"symbolKind":"class","role":"symbol","externalID":"s:13SignalHandlerAAC","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"title":"SignalHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"roleHeading":"Class","modules":[{"name":"SignalHandler"}]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u"]},{"title":"Instance Properties","identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals"]},{"title":"Instance Methods","identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"]},{"title":"Type Properties","identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default"]},{"title":"Type Methods","identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations"]}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/SignalHandler\/SQ","doc:\/\/SignalHandler\/s8SendableP","doc:\/\/SignalHandler\/ScA","doc:\/\/SignalHandler\/12_Concurrency8AnyActorP"]}],"abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler"]]},"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","type":"topic","kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/handler","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())","kind":"text"}],"title":"handler","abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"role":"symbol","abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"url":"\/documentation\/signalhandler\/signalhandler","title":"SignalHandler"},"doc://SignalHandler/SQ":{"identifier":"doc:\/\/SignalHandler\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","type":"topic","kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"start(with:handler:)","abstract":[{"text":"Start handling signals","type":"text"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:completion:)":{"url":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Start handling signals"}],"role":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"], ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"start(with:completion:)"},"doc://SignalHandler/ScA":{"type":"unresolvable","title":"_Concurrency.Actor","identifier":"doc:\/\/SignalHandler\/ScA"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"start()","kind":"symbol","role":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","abstract":[{"text":"Starts handling ","type":"text"},{"isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","type":"reference"},{"text":" registered asynchronously as they being caught","type":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/start()"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/Equatable-Implementations":{"type":"topic","title":"Equatable Implementations","kind":"article","role":"collectionGroup","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations","abstract":[],"url":"\/documentation\/signalhandler\/signalhandler\/equatable-implementations"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"url":"\/documentation\/signalhandler\/signalhandler\/signals","type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signals","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"]","kind":"text"}],"kind":"symbol","role":"symbol","title":"signals","abstract":[{"text":"Signals registered to be handled","type":"text"}]},"doc://SignalHandler/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/SignalHandler\/s8SendableP"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2p7ww":{"kind":"symbol","role":"symbol","title":"init(signals:handler:)","url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2p7ww","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"signals"},{"kind":"text","text":": "},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ()))","kind":"text"}],"type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","abstract":[{"text":"Instantiates this type","type":"text"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2t65u":{"abstract":[{"type":"text","text":"Instantiates this type"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"signals"},{"text":": [","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"], ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ()))","kind":"text"}],"kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2t65u","title":"init(signals:handler:)","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u","type":"topic","role":"symbol"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/default":{"role":"symbol","abstract":[{"text":"A simple singleton for the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler"},{"type":"text","text":" type"}],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"`default`"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandlerAAC","text":"SignalHandler"}],"url":"\/documentation\/signalhandler\/signalhandler\/default","title":"default"},"doc://SignalHandler/documentation/SignalHandler":{"role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"topic","url":"\/documentation\/signalhandler","title":"SignalHandler"},"doc://SignalHandler/12_Concurrency8AnyActorP":{"title":"_Concurrency.AnyActor","identifier":"doc:\/\/SignalHandler\/12_Concurrency8AnyActorP","type":"unresolvable"}}}