{"topicSections":[{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u"],"title":"Initializers"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals"],"title":"Instance Properties"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"],"title":"Instance Methods"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default"],"title":"Type Properties"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)"],"title":"Type Methods"},{"generated":true,"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations"],"title":"Default Implementations"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"inlineContent":[{"text":"It catches the signal asynchronously on the fly while executing the callback supplied to it.","type":"text"},{"text":" ","type":"text"},{"text":"It provides a way to clean up and exit if a signal registered is being caught","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"It should always be the first code and its encouraged to run in parallel with ","type":"text"},{"code":"async let","type":"codeVoice"},{"text":" syntax in order to enable it catch signals as soon as your code start executing","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Always remember to call ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"},{"text":" otherwise the registered signals wonâ€™t be caught","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Example of its usage"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["    let exitHandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","        print(\"Closing this program\")","        \/\/ Code to clean up resources used","    }","    async let _ = exitHandler.start()"]},{"inlineContent":[{"type":"text","text":"Or"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["    Task {","        let exithandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","            print(\"Closing this program\")","            \/\/ Code to clean up resources used","        }","        await exithandler.start()","    }"]}],"kind":"content"}],"identifier":{"url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","interfaceLanguage":"swift"},"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/SignalHandler\/SQ","doc:\/\/SignalHandler\/s8SendableP","doc:\/\/SignalHandler\/ScA","doc:\/\/SignalHandler\/12_Concurrency8AnyActorP"],"title":"Conforms To","kind":"relationships"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler"]]},"metadata":{"roleHeading":"Class","role":"symbol","modules":[{"name":"SignalHandler"}],"externalID":"s:13SignalHandlerAAC","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"symbolKind":"class","title":"SignalHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}]},"abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler"]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"abstract":[{"text":"Signals registered to be handled","type":"text"}],"type":"topic","title":"signals","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signals","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/signals"},"doc://SignalHandler/SQ":{"type":"unresolvable","identifier":"doc:\/\/SignalHandler\/SQ","title":"Swift.Equatable"},"doc://SignalHandler/ScA":{"type":"unresolvable","identifier":"doc:\/\/SignalHandler\/ScA","title":"_Concurrency.Actor"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2p7ww":{"type":"topic","role":"symbol","title":"init(signals:handler:)","kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2p7ww","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"signals"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> ()))"}],"abstract":[{"type":"text","text":"Instantiates this type"}]},"doc://SignalHandler/documentation/SignalHandler":{"role":"collection","abstract":[],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","kind":"symbol","url":"\/documentation\/signalhandler","type":"topic","title":"SignalHandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2t65u":{"type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u","role":"symbol","title":"init(signals:handler:)","abstract":[{"text":"Instantiates this type","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"signals","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ()))","kind":"text"}],"kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2t65u"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"type":"topic","title":"SignalHandler","navigatorTitle":[{"text":"SignalHandler","kind":"identifier"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignalHandler","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/signalhandler\/signalhandler"},"doc://SignalHandler/12_Concurrency8AnyActorP":{"type":"unresolvable","identifier":"doc:\/\/SignalHandler\/12_Concurrency8AnyActorP","title":"_Concurrency.AnyActor"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"abstract":[{"text":"Start handling signals","type":"text"}],"type":"topic","title":"start(with:handler:)","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"kind":"symbol","role":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:completion:)":{"type":"topic","role":"symbol","title":"start(with:completion:)","kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","url":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"kind":"text","text":"], "},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"abstract":[{"type":"text","text":"Start handling signals"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","role":"symbol","title":"handler","abstract":[{"text":"Callback to run if any registered signal is caught","type":"text"}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())","kind":"text"}],"kind":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/handler"},"doc://SignalHandler/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/SignalHandler\/s8SendableP","title":"Swift.Sendable"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/Equatable-Implementations":{"role":"collectionGroup","abstract":[],"title":"Equatable Implementations","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations","url":"\/documentation\/signalhandler\/signalhandler\/equatable-implementations","kind":"article","type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"url":"\/documentation\/signalhandler\/signalhandler\/start()","role":"symbol","abstract":[{"text":"Starts handling ","type":"text"},{"type":"reference","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","isActive":true},{"text":" registered asynchronously as they being caught","type":"text"}],"kind":"symbol","title":"start()","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/default":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`default`","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SignalHandler","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandlerAAC"}],"kind":"symbol","title":"default","abstract":[{"type":"text","text":"A simple singleton for the "},{"type":"reference","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","isActive":true},{"type":"text","text":" type"}],"role":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default","url":"\/documentation\/signalhandler\/signalhandler\/default","type":"topic"}}}