{"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler"]]},"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"roleHeading":"Class","externalID":"s:13SignalHandlerAAC","role":"symbol","symbolKind":"class","title":"SignalHandler","modules":[{"name":"SignalHandler"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u"],"title":"Initializers"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals"],"title":"Instance Properties"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"],"title":"Instance Methods"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default"],"title":"Type Properties"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)"],"title":"Type Methods"},{"generated":true,"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations"],"title":"Default Implementations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"actor"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"It catches the signal asynchronously on the fly while executing the callback supplied to it."},{"text":" ","type":"text"},{"text":"It provides a way to clean up and exit if a signal registered is being caught","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"It should always be the first code and its encouraged to run in parallel with ","type":"text"},{"type":"codeVoice","code":"async let"},{"text":" syntax in order to enable it catch signals as soon as your code start executing","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Always remember to call ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","isActive":true,"type":"reference"},{"text":" otherwise the registered signals wonâ€™t be caught","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Example of its usage","type":"text"}],"type":"paragraph"},{"code":["    let exitHandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","        print(\"Closing this program\")","        \/\/ Code to clean up resources used","    }","    async let _ = exitHandler.start()"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"type":"text","text":"Or"}],"type":"paragraph"},{"code":["    Task {","        let exithandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","            print(\"Closing this program\")","            \/\/ Code to clean up resources used","        }","        await exithandler.start()","    }"],"type":"codeListing","syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/signalhandler\/signalhandler"]}],"kind":"symbol","relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/SignalHandler\/SQ","doc:\/\/SignalHandler\/s8SendableP","doc:\/\/SignalHandler\/ScA","doc:\/\/SignalHandler\/12_Concurrency8AnyActorP"],"title":"Conforms To"}],"sections":[],"abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"references":{"doc://SignalHandler/ScA":{"identifier":"doc:\/\/SignalHandler\/ScA","title":"_Concurrency.Actor","type":"unresolvable"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"abstract":[{"type":"text","text":"Callback to run if any registered signal is caught"}],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","title":"handler","url":"\/documentation\/signalhandler\/signalhandler\/handler","type":"topic","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handler","kind":"identifier"},{"text":": ((","kind":"text"},{"text":"Int32","preciseIdentifier":"s:s5Int32V","kind":"typeIdentifier"},{"text":") -> ())","kind":"text"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:completion:)":{"abstract":[{"type":"text","text":"Start handling signals"}],"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","title":"start(with:completion:)","url":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"text":": [","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"], ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2p7ww":{"role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"signals","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals","kind":"typeIdentifier"},{"text":"..., ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") -> ()))","kind":"text"}],"kind":"symbol","abstract":[{"text":"Instantiates this type","type":"text"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2p7ww","title":"init(signals:handler:)"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"url":"\/documentation\/signalhandler\/signalhandler\/signals","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","title":"signals","kind":"symbol","role":"symbol","type":"topic","abstract":[{"text":"Signals registered to be handled","type":"text"}],"fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"signals","kind":"identifier"},{"kind":"text","text":": ["},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"kind":"text","text":"]"}]},"doc://SignalHandler/12_Concurrency8AnyActorP":{"identifier":"doc:\/\/SignalHandler\/12_Concurrency8AnyActorP","title":"_Concurrency.AnyActor","type":"unresolvable"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"title":"start()","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","kind":"symbol","role":"symbol","abstract":[{"text":"Starts handling ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","type":"reference","isActive":true},{"text":" registered asynchronously as they being caught","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"url":"\/documentation\/signalhandler\/signalhandler\/start()","type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"role":"symbol","type":"topic","title":"SignalHandler","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SignalHandler"}],"url":"\/documentation\/signalhandler\/signalhandler","abstract":[{"text":"Handler for most handleable *nix signals","type":"text"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2t65u":{"role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Instantiates this type","type":"text"}],"title":"init(signals:handler:)","url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2t65u","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"signals","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") -> ()))","kind":"text"}]},"doc://SignalHandler/SQ":{"identifier":"doc:\/\/SignalHandler\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://SignalHandler/documentation/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","url":"\/documentation\/signalhandler","title":"SignalHandler","type":"topic","kind":"symbol","role":"collection","abstract":[]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/default":{"title":"default","type":"topic","url":"\/documentation\/signalhandler\/signalhandler\/default","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`default`","kind":"identifier"},{"text":": ","kind":"text"},{"text":"SignalHandler","preciseIdentifier":"s:13SignalHandlerAAC","kind":"typeIdentifier"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default","kind":"symbol","role":"symbol","abstract":[{"text":"A simple singleton for the ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","type":"reference","isActive":true},{"text":" type","type":"text"}]},"doc://SignalHandler/s8SendableP":{"identifier":"doc:\/\/SignalHandler\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"role":"symbol","type":"topic","abstract":[{"text":"Start handling signals","type":"text"}],"title":"start(with:handler:)","url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/Equatable-Implementations":{"role":"collectionGroup","kind":"article","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations","title":"Equatable Implementations","abstract":[],"type":"topic","url":"\/documentation\/signalhandler\/signalhandler\/equatable-implementations"}}}