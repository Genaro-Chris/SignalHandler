{"metadata":{"roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}],"navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"symbolKind":"class","role":"symbol","title":"SignalHandler","externalID":"s:13SignalHandlerAAC","modules":[{"name":"SignalHandler"}]},"hierarchy":{"paths":[["doc:\/\/SignalHandler\/documentation\/SignalHandler"]]},"variants":[{"paths":["\/documentation\/signalhandler\/signalhandler"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler"},"topicSections":[{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u"],"title":"Initializers"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals"],"title":"Instance Properties"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()"],"title":"Instance Methods"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default"],"title":"Type Properties"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)"],"title":"Type Methods"},{"identifiers":["doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations"],"title":"Default Implementations","generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"actor","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignalHandler","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"text":"It catches the signal asynchronously on the fly while executing the callback supplied to it.","type":"text"},{"text":" ","type":"text"},{"text":"It provides a way to clean up and exit if a signal registered is being caught","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"It should always be the first code and its encouraged to run in parallel with ","type":"text"},{"code":"async let","type":"codeVoice"},{"text":" syntax in order to enable it catch signals as soon as your code start executing","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Always remember to call ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","type":"reference","isActive":true},{"text":" otherwise the registered signals wonâ€™t be caught","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Example of its usage"}],"type":"paragraph"},{"code":["    let exitHandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","        print(\"Closing this program\")","        \/\/ Code to clean up resources used","    }","    async let _ = exitHandler.start()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Or","type":"text"}],"type":"paragraph"},{"code":["    Task {","        let exithandler = SignalHandler(signals: .SIGINT, .SIQUIT) { _ in","            print(\"Closing this program\")","            \/\/ Code to clean up resources used","        }","        await exithandler.start()","    }"],"syntax":"swift","type":"codeListing"}]}],"abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"relationshipsSections":[{"identifiers":["doc:\/\/SignalHandler\/SQ","doc:\/\/SignalHandler\/s8SendableP","doc:\/\/SignalHandler\/ScA","doc:\/\/SignalHandler\/12_Concurrency8AnyActorP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"references":{"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2t65u":{"abstract":[{"type":"text","text":"Instantiates this type"}],"role":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2t65u","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"signals","kind":"externalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"handler","kind":"externalParam"},{"text":": ((","kind":"text"},{"preciseIdentifier":"s:s5Int32V","text":"Int32","kind":"typeIdentifier"},{"text":") -> ()))","kind":"text"}],"url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2t65u","title":"init(signals:handler:)","kind":"symbol","type":"topic"},"doc://SignalHandler/SQ":{"identifier":"doc:\/\/SignalHandler\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler","abstract":[{"type":"text","text":"Handler for most handleable *nix signals"}],"kind":"symbol","title":"SignalHandler","type":"topic","url":"\/documentation\/signalhandler\/signalhandler","navigatorTitle":[{"kind":"identifier","text":"SignalHandler"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignalHandler"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/handler":{"url":"\/documentation\/signalhandler\/signalhandler\/handler","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Callback to run if any registered signal is caught"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/handler","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())"}],"title":"handler","type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:completion:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"text":": [","kind":"text"},{"text":"Signals","kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO"},{"text":"], ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Int32","kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V"},{"text":") -> ())) ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"start(with:completion:)","type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:completion:)","abstract":[{"text":"Start handling signals","type":"text"}],"role":"symbol","url":"\/documentation\/signalhandler\/signalhandler\/start(with:completion:)","kind":"symbol"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/signals":{"kind":"symbol","title":"signals","url":"\/documentation\/signalhandler\/signalhandler\/signals","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signals","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Signals","preciseIdentifier":"s:13SignalHandler7SignalsO","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Signals registered to be handled"}]},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/init(signals:handler:)-2p7ww":{"url":"\/documentation\/signalhandler\/signalhandler\/init(signals:handler:)-2p7ww","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Instantiates this type"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/init(signals:handler:)-2p7ww","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"signals"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ()))"}],"title":"init(signals:handler:)","type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start(with:handler:)":{"url":"\/documentation\/signalhandler\/signalhandler\/start(with:handler:)","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Start handling signals"}],"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start(with:handler:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:13SignalHandler7SignalsO","text":"Signals"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5Int32V","text":"Int32"},{"kind":"text","text":") -> ())) "},{"kind":"keyword","text":"async"}],"title":"start(with:handler:)","type":"topic"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/default":{"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`default`","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:13SignalHandlerAAC","text":"SignalHandler","kind":"typeIdentifier"}],"title":"default","url":"\/documentation\/signalhandler\/signalhandler\/default","kind":"symbol","abstract":[{"text":"A simple singleton for the ","type":"text"},{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","isActive":true,"type":"reference"},{"type":"text","text":" type"}],"type":"topic","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/default"},"doc://SignalHandler/s8SendableP":{"identifier":"doc:\/\/SignalHandler\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://SignalHandler/ScA":{"identifier":"doc:\/\/SignalHandler\/ScA","title":"_Concurrency.Actor","type":"unresolvable"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/start()":{"kind":"symbol","title":"start()","url":"\/documentation\/signalhandler\/signalhandler\/start()","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/start()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Starts handling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/signals"},{"type":"text","text":" registered asynchronously as they being caught"}]},"doc://SignalHandler/documentation/SignalHandler":{"abstract":[],"type":"topic","role":"collection","kind":"symbol","identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler","title":"SignalHandler","url":"\/documentation\/signalhandler"},"doc://SignalHandler/12_Concurrency8AnyActorP":{"identifier":"doc:\/\/SignalHandler\/12_Concurrency8AnyActorP","title":"_Concurrency.AnyActor","type":"unresolvable"},"doc://SignalHandler/documentation/SignalHandler/SignalHandler/Equatable-Implementations":{"identifier":"doc:\/\/SignalHandler\/documentation\/SignalHandler\/SignalHandler\/Equatable-Implementations","title":"Equatable Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/signalhandler\/signalhandler\/equatable-implementations","abstract":[],"kind":"article"}}}